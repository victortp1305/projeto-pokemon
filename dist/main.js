(()=>{"use strict";function e(e,t){let s;return(...i)=>{s&&clearTimeout(s),s=setTimeout((()=>{e(...i),s=null}),t)}}new class{constructor(t,s=151,i=14,a="#search-input",r="#type-wrapper"){this.MAX_POKEMON=s,this.listWrapper=document.querySelector(t),this.searchInput=document.querySelector(a),this.activeClass="ativo",this.typeWrapper=document.querySelector(r),this.typeFilterWrap=document.querySelector(".type-filter-wrap"),this.notFoundMessage=document.getElementById("not-found-message"),this.closeButton=document.querySelector(".search-close-icon"),this.filterWrapper=document.querySelector(".filter-wrapper"),this.pokemonData=[],this.filtroType=[],this.currentPage=1,this.itemsPerPage=i,this.clearSearch=this.clearSearch.bind(this),this.toggleTypeFiltro=this.toggleTypeFiltro.bind(this),this.aplicarFiltros=this.aplicarFiltros.bind(this),this.typeColors={normal:"#A8A878",fire:"#F08030",water:"#6890F0",electric:"#F8D030",grass:"#78C850",ice:"#98D8D8",fighting:"#C03028",poison:"#A040A0",ground:"#E0C068",flying:"#A890F0",psychic:"#F85888",bug:"#A8B820",rock:"#B8A038",ghost:"#705898",dragon:"#7038F8",dark:"#705848",steel:"#B8B8D0",dark:"#EE99AC",fairy:"#EE99AC"},this.modal=document.getElementById("pokemonModal"),this.modalContent=document.querySelector(".modal-content"),this.modalDetails=document.getElementById("pokemonDetails"),this.closeButtonModal=document.querySelector(".close"),this.closeButtonModal.onclick=()=>{this.modal.style.display="none"},window.onclick=e=>{e.target==this.modal&&(this.modal.style.display="none")},this.clearFilterButton=document.getElementById("clear-filter-button"),this.clearFilterButton.addEventListener("click",(()=>this.limparFiltro())),this.verificarTamanhoTela(i),window.addEventListener("resize",e((()=>this.verificarTamanhoTela(i)),500))}aplicarCoresNosLabels(){this.typeWrapper.querySelectorAll(".type-wrap > div").forEach((e=>{const t=e.getAttribute("data-type"),s=this.typeColors[t];s&&e.style.setProperty("--cor-principal",s)}))}hexParaRgb(e,t=1){if(3===(e=e.replace("#","")).length&&(e=e.split("").map((e=>e+e)).join("")),6!==e.length)throw new Error("Entrada inválida. Use um valor hexadecimal de 3 ou 6 caracteres.");return`rgba(${parseInt(e.slice(0,2),16)}, ${parseInt(e.slice(2,4),16)}, ${parseInt(e.slice(4,6),16)}, ${t})`}async criarPokemon(e){this.filtroType=e;const t=t=>{const s=t*this.itemsPerPage,i=s-this.itemsPerPage,a=e.slice(i,s);this.listWrapper.innerHTML="";const r=document.createDocumentFragment();a.forEach((e=>{try{const t=document.createElement("div");t.classList.add("pokemon-card"),t.setAttribute("data-id",e.id);const{name:s,types:i,id:a,weight:o,height:n,stats:l,abilities:c}=e,d=i[0].type.name,p=i[1]?i[1].type.name:null,h=this.typeColors[d];this.typeColors[p],t.style.setProperty("--identidade-primaria-fosca",this.hexParaRgb(h,.3)),t.style.setProperty("--identidade-primaria",h),t.innerHTML=`\n          <div class="number-wrap">\n              <p class="caption-fonts">#${a}</p>\n          </div>\n          <div class="img-wrap">\n              <img src="${e.sprites.other.dream_world.front_default}" alt="${s}"/>\n          </div>\n          <div class="name-wrap">\n          <div class="p-type">\n              <p class="body3-fonts">${s}</p>\n          </div>\n          </div>\n        `,t.addEventListener("click",(e=>{const t=e.currentTarget.getAttribute("data-id");this.exibirDetalhesPokemon(t)})),r.appendChild(t)}catch(e){console.error("Erro ao criar o card do Pokémon:",e)}})),requestAnimationFrame((()=>{this.listWrapper.appendChild(r)}))},s=()=>{document.querySelectorAll(".pagination button").forEach((e=>e.classList.remove("ativo"))),document.querySelectorAll(".pagination button")[this.currentPage].classList.add("ativo")};this.currentPage=1,(e=>{let i=document.querySelector(".pagination");if(1===e)i.innerHTML="";else{i?i.innerHTML="":(i=document.createElement("div"),i.classList.add("pagination"),document.body.appendChild(i));const a=document.createElement("button");a.textContent="<",a.classList.add("pag-arrow"),a.classList.add("arrow-left"),a.addEventListener("click",(()=>{this.currentPage>1?(this.currentPage--,t(this.currentPage),s()):(this.currentPage=e,t(this.currentPage),s())})),i.appendChild(a);for(let s=1;s<=e;s++){const e=document.createElement("button");s===this.currentPage&&e.classList.add("ativo"),e.addEventListener("click",(()=>{this.currentPage=s,t(this.currentPage),document.querySelectorAll(".pagination button").forEach((e=>e.classList.remove("ativo"))),e.classList.add("ativo")})),i.appendChild(e)}const r=document.createElement("button");r.textContent=">",r.classList.add("pag-arrow"),r.classList.add("arrow-right"),r.addEventListener("click",(()=>{this.currentPage<e?(this.currentPage++,t(this.currentPage),s()):(this.currentPage=1,t(this.currentPage),s())})),i.appendChild(r),document.querySelector(".pokemon-list").appendChild(i)}})(Math.ceil(e.length/this.itemsPerPage)),t(this.currentPage)}async exibirDetalhesPokemon(e){try{this.currentPokemonId=e;const t=await fetch(`https://pokeapi.co/api/v2/pokemon-species/${e}`).then((e=>e.json())),s=this.getEnglishFlavorText(t),i=this.filtroType.find((t=>t.id==e)),{name:a,types:r,weight:o,height:n,stats:l,abilities:c,sprites:d}=i,p=r[0].type.name,h=r[1]?r[1].type.name:null,m=this.typeColors[p],u=this.typeColors[h],y={hp:"HP",attack:"ATK",defense:"DEF","special-attack":"SATK","special-defense":"SDEF",speed:"SPD"};if(!i)return void console.error("Pokémon não encontrado");this.modalDetails.innerHTML=`\n      \n      <div class="detail-card-detail-wrapper">\n    <div class="header-wrapper">\n      <div class="header-wrap">\n        <div class="name-wrap">\n          <h1 class="name">${a}</h1>\n        </div>\n      </div>\n      <div class="pokemon-id-wrap">\n        <p class="body2-fonts">#${e}</p>\n      </div>\n    </div>\n    <div class="featured-img">\n      <div class="detail-img-wrapper">\n        <img src="${d.other.dream_world.front_default}" alt="${a}">\n      </div>\n    </div>\n    <div class="power-wrapper">\n      ${r.map((e=>`<p class="body3-fonts type ${e.type.name}">${e.type.name}</p>`)).join("")}\n    </div>\n    <p class="body2-fonts about-text">Sobre</p>\n    <div class="pokemon-detail-wrapper">\n      <div class="pokemon-detail-wrap">\n        <div class="pokemon-detail">\n          <img src="./dist/assets/weight.svg" alt="weight">\n          <p class="body3-fonts weight">${o/10}kg</p>\n        </div>\n        <p class="caption-fonts">Peso</p>\n      </div>\n      <div class="pokemon-detail-wrap">\n        <div class="pokemon-detail">\n          <img src="./dist/assets/height.svg" alt="height">\n          <p class="body3-fonts height">${n/10}m</p>\n        </div>\n        <p class="caption-fonts">Altura</p>\n      </div>\n      <div class="pokemon-detail-wrap">\n        <div class="pokemon-detail move">\n          ${c.map((e=>`<p>${e.ability.name}</p>`)).join("")}\n        </div>\n        <p class="caption-fonts">Habilidades</p>\n      </div>\n    </div>\n    <p class="body3-fonts pokemon-description">${s}</p>\n    <p class="body2-fonts about-text">Base Stats</p>\n    <div class="stats-wrapper">\n      ${l.map((({stat:e,base_stat:t})=>`\n        <div class="stats-wrap" data-stat="${y[e.name]}">\n          <p class="body3-fonts stats">${y[e.name]}</p>\n          <p class="body3-fonts">${t}</p>\n          <progress value="${t}" max="100" class="progress-bar"></progress>\n        </div>\n      `)).join("")}\n    </div>\n  </div>`,this.modal.style.display="flex",this.modalContent.style.setProperty("--identidade-primaria",m),this.modalContent.style.setProperty("--identidade-secundaria",u),this.modalContent.style.setProperty("--identidade-primaria-fosca",this.hexParaRgb(m,.3))}catch(e){console.error("Erro ao exibir os detalhes do Pokémon:",e)}}getEnglishFlavorText(e){for(let t of e.flavor_text_entries)if("en"===t.language.name)return t.flavor_text.replace(/\f/g," ");return""}navegarPokemon(e){let t=this.filtroType.findIndex((e=>e.id==this.currentPokemonId))+e;t<0?t=this.filtroType.length-1:t>=this.filtroType.length&&(t=0);const s=this.filtroType[t].id;this.exibirDetalhesPokemon(s)}async fetchPokemonDataBeforeRedirect(e){try{const[t,s]=await Promise.all([fetch(`https://pokeapi.co/api/v2/pokemon/${e}`).then((e=>e.json())),fetch(`https://pokeapi.co/api/v2/pokemon-species/${e}`).then((e=>e.json()))]);return!0}catch(e){console.error("Faiou")}}filtrarPokemonPorTipo(e,t){return"all"===t?e:e.filter((e=>e.types.some((e=>e.type.name===t))))}filtrarPokemonPorNomeOuNumero(e,t){return t?e.filter((e=>{const s=e.id.toString(),i=e.name.toLowerCase();return s.startsWith(t)||i.startsWith(t)})):e}aplicarFiltros(){const e=this.typeWrapper.querySelector('input[type="radio"]:checked'),t=e?e.value:"all",s=getComputedStyle(document.body).getPropertyValue("--identidade-primaria"),i=t,a=this.typeColors[i];"all"!==t?(document.querySelector(".pokemon-list").style.setProperty("--identidade-primaria",a),document.querySelector(".pokemon-list").style.setProperty("--identidade-primaria-fosca",this.hexParaRgb(a,.3))):(document.querySelector(".pokemon-list").style.setProperty("--identidade-primaria",s),document.querySelector(".pokemon-list").style.setProperty("--identidade-primaria-fosca",this.hexParaRgb(s,.3)));const r=this.searchInput.value.toLowerCase();let o;this.filtroType=this.filtrarPokemonPorTipo(this.pokemonData,t),o=this.filtrarPokemonPorNomeOuNumero(this.filtroType,r),this.criarPokemon(o),this.filtroType=o,0===o.length?(this.notFoundMessage.style.display="block",document.querySelector(".pagination").innerHTML=""):this.notFoundMessage.style.display="none"}limparFiltro(){document.getElementById("all").checked=!0,this.aplicarFiltros()}async fetchAndStorePokemonData(){const e=document.getElementById("loading");e.style.display="block",this.listWrapper.innerHTML="";const t=Array.from({length:this.MAX_POKEMON},((e,t)=>t+1));try{const e=await Promise.all(t.map((async e=>{try{const t=await fetch(`https://pokeapi.co/api/v2/pokemon/${e}`);if(!t.ok)throw new Error(`Erro ao buscar dados do Pokémon com ID ${e}: ${t.statusText}`);return await t.json()}catch(t){return console.error(`Erro ao buscar dados do Pokémon com ID ${e}:`,t),null}})));this.pokemonData=e.filter((e=>null!==e)),this.filtroType=this.pokemonData,this.criarPokemon(this.pokemonData)}catch(e){console.error("Erro ao buscar dados dos Pokémon:",e)}finally{e.style.display="none"}}toggleTypeFiltro(){this.typeWrapper.classList.toggle(this.activeClass),this.typeFilterWrap.classList.toggle(this.activeClass)}clearSearch(){this.searchInput.value="",this.aplicarFiltros(),this.notFoundMessage.style.display="none",this.closeButton.classList.remove("search-close-icon-visible")}handleInputChange(e){""!==e.value?this.closeButton.classList.add("search-close-icon-visible"):this.closeButton.classList.remove("search-close-icon-visible")}verificarTamanhoTela(e){const t=window.innerWidth,s=window.innerHeight;e=Math.floor(t/234)*Math.floor(s/304),window.innerWidth<=1e3?(this.itemsPerPage=this.MAX_POKEMON,this.listWrapper.style.height="auto"):this.itemsPerPage=e,this.criarPokemon(this.filtroType)}eventListeners(){this.searchInput.addEventListener("keyup",e(this.aplicarFiltros,100)),this.closeButton.addEventListener("click",this.clearSearch),this.typeFilterWrap.addEventListener("click",this.toggleTypeFiltro),this.searchInput.addEventListener("input",(()=>{this.handleInputChange(this.searchInput)})),this.typeWrapper.addEventListener("change",(e=>{"INPUT"===e.target.tagName&&"radio"===e.target.type&&this.aplicarFiltros()})),document.getElementById("prevPokemon").addEventListener("click",(()=>{this.navegarPokemon(-1)})),document.getElementById("nextPokemon").addEventListener("click",(()=>{this.navegarPokemon(1)}))}async init(){if(this.listWrapper)return await this.fetchAndStorePokemonData(),this.aplicarCoresNosLabels(),this.eventListeners(),this}}(".list-wrapper",500,24).init()})();